package Step1_Fillter;
import org.apache.commons.lang.StringUtils;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.NullWritable;
import org.apache.hadoop.io.Text;


import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;


import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Step1_Fillter {
    public class Fillter_Map extends Mapper<LongWritable, Text, Text, Text> {
        @Override
        protected void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {
            System.out.printf("DSAD");
            String[] line = value.toString().split("\u0001");
            System.out.println(line.length);
            if (line.length == 15) {
                String newKey = line[1];
                String url = line[14];
                if (url.startsWith("http")||url.startsWith("https")){
                    Pattern p = Pattern.compile("(?<=http://|\\.)[^.]*?\\.(com.cn|net.cn|gov.cn|org.nz|org.cn|com|net|org|gov|cc|biz|info|cn|hk|in|am|im|fm|tv|co|me|us|io|mobi|pw|so|gs|top|la\n)", Pattern.CASE_INSENSITIVE);
                    Matcher matcher = p.matcher(url);
                    if (matcher.find()) {

                        System.out.println(matcher.group());
                        context.write(new Text(newKey + "|" + url + "|" + matcher.group()), new Text(""));
                    }
                }

            }else{
                return;
            }
        }
    }



    public static void main(String[] args) throws IOException, ClassNotFoundException, InterruptedException {
        Configuration conf = new Configuration();
        conf.set("fs.defaultFS", "hdfs://192.168.44.22:9000");


            Job job = Job.getInstance(conf);
            job.setJarByClass(Step1_Fillter.class);
            job.setMapperClass(Fillter_Map.class);
            job.setOutputKeyClass(Text.class);
            job.setOutputValueClass(Text.class);
            FileInputFormat.setInputPaths(job,new Path("hdfs:/project/DianXin1/"));
            FileOutputFormat.setOutputPath(job,new Path("/output/result"));

            job.waitForCompletion(true);



    }
}
